# Stage 1: Build the application
FROM php:8.2-fpm AS build

# Install dependencies for PHP and Composer
RUN apt-get update && apt-get install -y \
    git \
    unzip \
    libzip-dev \
    zip \
    && docker-php-ext-install pdo pdo_mysql zip \
    && docker-php-ext-enable pdo_mysql

# Set the working directory
WORKDIR /var/www

# Copy application files
COPY . .

# Install Composer
COPY --from=composer:2 /usr/bin/composer /usr/bin/composer

# Install application dependencies
RUN composer install --no-dev --optimize-autoloader

# Copy example .env file
COPY .env-local .env

# Replace placeholders in the .env file dynamically
CMD envsubst < .env > /var/www/.env && php artisan config:cache && php-fpm

# Change ownership to www-data
RUN chown -R www-data:www-data /var/www

# Stage 2: Serve the application
FROM nginx:1.23

# Copy Nginx configuration
COPY ./docker/nginx/default.conf /etc/nginx/conf.d/default.conf

# Copy application files from the build stage
COPY --from=build /var/www /var/www

# Expose the default Nginx port
EXPOSE 9090

# Start Nginx
CMD ["nginx", "-g", "daemon off;"]
